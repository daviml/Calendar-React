{"ast":null,"code":"var _jsxFileName = \"/home/davi/Documentos/GitHub/Calendar-React/my-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './app.css';\nimport * as moment from 'moment';\nimport 'moment/locale/pt-br';\nexport default function CalendarV2() {\n  const [calendar, setCalendar] = useState([]);\n  const [value, setValue] = useState(moment());\n  useEffect(() => {\n    const day = startDay().clone().subtract(1, 'day');\n    const tmp = [];\n\n    while (day.isBefore(endDay(), \"day\")) {\n      tmp.push(Array(5).fill(0).map(() => day.add(1, 'day').clone()));\n    }\n\n    setCalendar(tmp);\n  }, [value]);\n\n  function endDay() {\n    let endDay = value.clone().endOf(\"month\").endOf(\"week\");\n    return endDay;\n  }\n\n  function startDay() {\n    let startDay = value.clone().startOf(\"month\").startOf(\"week\");\n    return startDay;\n  }\n\n  function currentMonth() {\n    return value.format(\"MMMM\");\n  }\n\n  function currentYear() {\n    return value.format(\"YYYY\");\n  }\n\n  function lastFiveYears() {\n    let year = new Date().getFullYear();\n    let popYearValue = [];\n\n    for (let i = 0; i < 5; i++) {\n      popYearValue.push(year - i);\n    }\n\n    return popYearValue;\n  }\n\n  function popYear() {\n    let popYear = lastFiveYears().map(years => /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, years));\n    return popYear;\n  }\n\n  function popMonth() {\n    let popMonth = moment.months().map(months => /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, months));\n    return popMonth;\n  }\n\n  function changeMonth(date) {\n    setValue(value.clone().month(date.target.value));\n  }\n\n  ;\n\n  function changeYear(date) {\n    setValue(value.clone().year(date.target.value));\n  }\n\n  ;\n\n  function checkMonth(day) {\n    if (day.format(\"MM\") == value.format(\"MM\")) {\n      return \"boxon\";\n    } else {\n      return \"boxoff\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"monthyear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"monthyear\",\n    onChange: date => changeMonth(date),\n    value: currentMonth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, popMonth()), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"monthyear\",\n    onChange: date => changeYear(date),\n    value: currentYear(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, popYear())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalvendas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Total de vendas\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalvalor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"R$ 100.0000,00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, calendar.map(week => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, week.map(day => /*#__PURE__*/React.createElement(\"div\", {\n    className: checkMonth(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, day.format(\"DD\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Realizado\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valueofday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"R$ 10.000,00\")))))));\n}","map":{"version":3,"sources":["/home/davi/Documentos/GitHub/Calendar-React/my-app/src/App.js"],"names":["React","useState","useEffect","moment","CalendarV2","calendar","setCalendar","value","setValue","day","startDay","clone","subtract","tmp","isBefore","endDay","push","Array","fill","map","add","endOf","startOf","currentMonth","format","currentYear","lastFiveYears","year","Date","getFullYear","popYearValue","i","popYear","years","popMonth","months","changeMonth","date","month","target","changeYear","checkMonth","week"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAO,qBAAP;AAIA,eAAe,SAASC,UAAT,GAAsB;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,MAAM,EAAP,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,GAAG,GAAGC,QAAQ,GAAGC,KAAX,GAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,KAA/B,CAAZ;AACA,UAAMC,GAAG,GAAE,EAAX;;AAEA,WAAMJ,GAAG,CAACK,QAAJ,CAAaC,MAAM,EAAnB,EAAsB,KAAtB,CAAN,EAAmC;AACjCF,MAAAA,GAAG,CAACG,IAAJ,CACEC,KAAK,CAAC,CAAD,CAAL,CACCC,IADD,CACM,CADN,EAECC,GAFD,CAEK,MAAKV,GAAG,CAACW,GAAJ,CAAQ,CAAR,EAAU,KAAV,EAAiBT,KAAjB,EAFV,CADF;AAKD;;AACDL,IAAAA,WAAW,CAACO,GAAD,CAAX;AACD,GAZQ,EAYP,CAACN,KAAD,CAZO,CAAT;;AAcA,WAASQ,MAAT,GAAiB;AACf,QAAIA,MAAM,GAAGR,KAAK,CAACI,KAAN,GAAcU,KAAd,CAAoB,OAApB,EAA6BA,KAA7B,CAAmC,MAAnC,CAAb;AACA,WAAON,MAAP;AACD;;AAED,WAASL,QAAT,GAAmB;AACjB,QAAIA,QAAQ,GAAGH,KAAK,CAACI,KAAN,GAAcW,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAf;AACA,WAAOZ,QAAP;AACD;;AAED,WAASa,YAAT,GAAuB;AACrB,WAAOhB,KAAK,CAACiB,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,WAASC,WAAT,GAAsB;AACpB,WAAOlB,KAAK,CAACiB,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,WAASE,aAAT,GAAwB;AACtB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAX;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAClBD,MAAAA,YAAY,CAACd,IAAb,CAAkBW,IAAI,GAACI,CAAvB;AACD;;AACD,WACED,YADF;AAGD;;AAED,WAASE,OAAT,GAAkB;AAChB,QAAIA,OAAO,GAAGN,aAAa,GAAGP,GAAhB,CAAqBc,KAAD,iBAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,KAAT,CADc,CAAd;AAGA,WAAOD,OAAP;AACD;;AAED,WAASE,QAAT,GAAmB;AACjB,QAAIA,QAAQ,GAAG/B,MAAM,CAACgC,MAAP,GAAgBhB,GAAhB,CAAqBgB,MAAD,iBACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,MAAT,CADe,CAAf;AAGA,WAAOD,QAAP;AACD;;AAED,WAASE,WAAT,CAAqBC,IAArB,EAA0B;AACxB7B,IAAAA,QAAQ,CAACD,KAAK,CAACI,KAAN,GAAc2B,KAAd,CAAoBD,IAAI,CAACE,MAAL,CAAYhC,KAAhC,CAAD,CAAR;AACD;;AAAA;;AAED,WAASiC,UAAT,CAAoBH,IAApB,EAAyB;AACvB7B,IAAAA,QAAQ,CAACD,KAAK,CAACI,KAAN,GAAcgB,IAAd,CAAmBU,IAAI,CAACE,MAAL,CAAYhC,KAA/B,CAAD,CAAR;AAED;;AAAA;;AAED,WAASkC,UAAT,CAAoBhC,GAApB,EAAwB;AACtB,QAAGA,GAAG,CAACe,MAAJ,CAAW,IAAX,KAAoBjB,KAAK,CAACiB,MAAN,CAAa,IAAb,CAAvB,EAA0C;AACxC,aAAO,OAAP;AACD,KAFD,MAGI;AACF,aAAQ,QAAR;AACD;AACF;;AAED,sBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AACA,IAAA,QAAQ,EAAEa,IAAI,IAAID,WAAW,CAACC,IAAD,CAD7B;AAEA,IAAA,KAAK,EAAEd,YAAY,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGW,QAAQ,EAHX,CAFF,eAQE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AACA,IAAA,QAAQ,EAAEG,IAAI,IAAIG,UAAU,CAACH,IAAD,CAD5B;AAEA,IAAA,KAAK,EAAEZ,WAAW,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGO,OAAO,EAHV,CARF,CAHJ,eAmBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBJ,eAuBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBJ,eA2BI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI3B,QAAQ,CAACc,GAAT,CAAauB,IAAI,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,IAAI,CAACvB,GAAL,CAASV,GAAG,iBACZ;AAAK,IAAA,SAAS,EAAEgC,UAAU,CAAChC,GAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEA,GAAG,CAACe,MAAJ,CAAW,IAAX,CAFF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eASE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CADA,CAFJ,CADA,CAFJ,CA3BJ,CAFA;AAuDD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './app.css';\nimport * as moment from 'moment';\nimport 'moment/locale/pt-br';\n\n\n\nexport default function CalendarV2 (){\n  \n  const [calendar, setCalendar] = useState([])\n  const [value, setValue] = useState(moment());\n\n  useEffect(()  =>{\n    const day = startDay().clone().subtract(1, 'day')\n    const tmp =[]\n\n    while(day.isBefore(endDay(),\"day\")){\n      tmp.push(\n        Array(5)\n        .fill(0)\n        .map(()=> day.add(1,'day').clone())\n      )\n    }\n    setCalendar(tmp)\n  },[value])\n  \n  function endDay(){\n    let endDay = value.clone().endOf(\"month\").endOf(\"week\")\n    return(endDay)\n  }\n\n  function startDay(){\n    let startDay = value.clone().startOf(\"month\").startOf(\"week\")\n    return(startDay)\n  }\n\n  function currentMonth(){\n    return value.format(\"MMMM\")\n  }\n\n  function currentYear(){\n    return value.format(\"YYYY\")\n  }\n\n  function lastFiveYears(){\n    let year = new Date().getFullYear();\n    let popYearValue = []\n    for(let i=0;i<5;i++){\n      popYearValue.push(year-i)\n    }\n    return(\n      popYearValue\n    )\n  }\n\n  function popYear(){\n    let popYear = lastFiveYears().map((years) =>\n    <option>{years}</option>\n    )\n    return(popYear)\n  }\n\n  function popMonth(){\n    let popMonth = moment.months().map((months) =>\n    <option>{months}</option>\n    );\n    return(popMonth)\n  }\n\n  function changeMonth(date){\n    setValue(value.clone().month(date.target.value))\n  };\n\n  function changeYear(date){\n    setValue(value.clone().year(date.target.value))\n    \n  };\n\n  function checkMonth(day){\n    if(day.format(\"MM\") == value.format(\"MM\")){\n      return(\"boxon\")\n    }\n    else{\n      return (\"boxoff\")\n    }\n  }\n\n  return(\n            \n  <div>\n      \n\n      <div className=\"monthyear\">\n\n        <select className=\"monthyear\"\n        onChange={date => changeMonth(date)}\n        value={currentMonth()} >\n          {popMonth()}\n        </select>\n\n        <select className=\"monthyear\"\n        onChange={date => changeYear(date)}\n        value={currentYear()} >\n          {popYear()}\n        </select>\n\n      </div>\n      \n      <div className=\"totalvendas\">\n        Total de vendas\n      </div>\n\n      <div className=\"totalvalor\">\n        R$ 100.0000,00\n      </div>\n\n      <div className=\"calendar-container\">\n        {\n          calendar.map(week => \n          <div>\n            {\n              week.map(day => \n              <div className={checkMonth(day)}>\n                <div className=\"day\">\n                  {\n                  day.format(\"DD\")\n                  }\n                </div>\n                <div className=\"status\">\n                  Realizado\n                </div>\n                <div className=\"valueofday\">\n                  R$ 10.000,00\n                </div>\n              </div>)\n            }\n          </div>)\n        }\n      </div>\n\n    </div> \n  )\n}"]},"metadata":{},"sourceType":"module"}